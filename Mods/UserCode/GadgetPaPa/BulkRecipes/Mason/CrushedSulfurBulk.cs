// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from BlockTemplate.tt/>

namespace Eco.Mods.TechTree
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Gameplay.Blocks;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Core.Items;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Shared.SharedTypes;
    using Eco.World;
    using Eco.World.Blocks;
    using Eco.World.Water;
    using Eco.Gameplay.Pipes;
    using Eco.Core.Controller;
    using Eco.Gameplay.Items.Recipes;
    using Eco.Shared.Graphics;
    using Eco.World.Color;

    [RequiresSkill(typeof(MiningSkill), 3)]  // 1
    [Ecopedia("Blocks", "Processed Rock", subPageName: "Crushed Sulfur Tiny Bulk Item")]
    public partial class CrushedSulfurBulkRecipe : RecipeFamily
    {
        public CrushedSulfurBulkRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "CrushedSulfurTinyBulk",  //noloc
                displayName: Localizer.DoStr("Crushed Sulfur Tiny Bulk"),
                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(SulfurItem), 12f*BulkRecipeSettings.TinyBulkMultiplier, true),  // 12 x 10
                },
                items: new List<CraftingElement>
                {
                    new CraftingElement<CrushedSulfurItem>(2f*BulkRecipeSettings.TinyBulkMultiplier*BulkRecipeSettings.TinyBulkOutput),  // 2 x 10 x 2
                    new CraftingElement<CrushedMixedRockItem>(1f*BulkRecipeSettings.TinyBulkMultiplier*BulkRecipeSettings.TinyBulkOutput),  // 1 x 10 x 2
                });
            this.Recipes = new List<Recipe> { recipe };
            this.ExperienceOnCraft = 0.5f*BulkRecipeSettings.TinyBulkMultiplier; // 0.5 x 10
            this.LaborInCalories = CreateLaborInCaloriesValue(70f*BulkRecipeSettings.TinyBulkMultiplier,typeof(MiningSkill));  // 70 x 10
            this.CraftMinutes = CreateCraftTimeValue(beneficiary: typeof(CrushedSulfurBulkRecipe), start: 2f*BulkRecipeSettings.TinyBulkMultiplier*BulkRecipeSettings.TinyBulkCraft, skillType: typeof(MiningSkill));  // 2 x 10
            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Crushed Sulfur Tiny Bulk"), recipeType: typeof(CrushedSulfurBulkRecipe));
            this.ModsPostInitialize();
            CraftingComponent.AddRecipe(tableType: typeof(ArrastraObject), recipe: this);
        }
        partial void ModsPreInitialize();
        partial void ModsPostInitialize();
    }


    [RequiresSkill(typeof(MiningSkill), 1)]
    public partial class CrushedSulfurLv2BulkRecipe : RecipeFamily
    {
        public CrushedSulfurLv2BulkRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "CrushedSulfurLv2SmallBulk",  //noloc
                displayName: Localizer.DoStr("Crushed Sulfur Lv2 Small Bulk"),
                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(SulfurItem), 20f*BulkRecipeSettings.SmallBulkMultiplier, true),  // 20 x 10
                },
                items: new List<CraftingElement>
                {
                    new CraftingElement<CrushedSulfurItem>(4f*BulkRecipeSettings.SmallBulkMultiplier*BulkRecipeSettings.SmallBulkOutput),  // 4 x 10 x 2
                    new CraftingElement<CrushedMixedRockItem>(1f*BulkRecipeSettings.SmallBulkMultiplier*BulkRecipeSettings.SmallBulkOutput),  // 1 x 10 x 2
                });
            this.Recipes = new List<Recipe> { recipe };
            this.ExperienceOnCraft = 0.5f*BulkRecipeSettings.SmallBulkMultiplier; // 0.5 x 10
            this.LaborInCalories = CreateLaborInCaloriesValue(50f*BulkRecipeSettings.SmallBulkMultiplier,typeof(MiningSkill));  // 50 x 10
            this.CraftMinutes = CreateCraftTimeValue(beneficiary: typeof(CrushedSulfurLv2BulkRecipe), start: 1f*BulkRecipeSettings.SmallBulkMultiplier*BulkRecipeSettings.SmallBulkCraft, skillType: typeof(MiningSkill));  // 1 x 10
            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Crushed Sulfur Lv2 Small Bulk"), recipeType: typeof(CrushedSulfurLv2BulkRecipe));
            this.ModsPostInitialize();
            CraftingComponent.AddRecipe(tableType: typeof(StampMillObject), recipe: this);
        }
        partial void ModsPreInitialize();
        partial void ModsPostInitialize();
    }


    [RequiresSkill(typeof(MiningSkill), 4)]  // 2
    public partial class CrushedSulfurLv3BulkRecipe : RecipeFamily
    {
        public CrushedSulfurLv3BulkRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "CrushedSulfurLv3Bulk",  //noloc
                displayName: Localizer.DoStr("Crushed Sulfur Lv3 Bulk"),
                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(SulfurItem), 20f*BulkRecipeSettings.BulkMultiplier, true),  // 20 x 25
                },
                items: new List<CraftingElement>
                {
                    new CraftingElement<CrushedSulfurItem>(5f*BulkRecipeSettings.BulkMultiplier*BulkRecipeSettings.BulkOutput),  // 5 x 25 x 3
                });
            this.Recipes = new List<Recipe> { recipe };
            this.ExperienceOnCraft = 0.5f*BulkRecipeSettings.BulkMultiplier; // 0.5 x 25
            this.LaborInCalories = CreateLaborInCaloriesValue(70f*BulkRecipeSettings.BulkMultiplier,typeof(MiningSkill));  // 70 x 25
            this.CraftMinutes = CreateCraftTimeValue(beneficiary: typeof(CrushedSulfurLv3BulkRecipe), start: 0.5f*BulkRecipeSettings.BulkMultiplier*BulkRecipeSettings.BulkCraft, skillType: typeof(MiningSkill));  // 0.5 x 25
            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Crushed Sulfur Lv3 Bulk"), recipeType: typeof(CrushedSulfurLv3BulkRecipe));
            this.ModsPostInitialize();
            CraftingComponent.AddRecipe(tableType: typeof(JawCrusherObject), recipe: this);
        }
        partial void ModsPreInitialize();
        partial void ModsPostInitialize();
    }
}
