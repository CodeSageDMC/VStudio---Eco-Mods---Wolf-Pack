// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from FoodTemplate.tt/>

namespace Eco.Mods.TechTree
{
    using Eco.Core.Items;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Shared.Time;
    using System;
    using System.Collections.Generic;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Skills;
    using Eco.Shared.Items;
    using Eco.World;
    using Eco.World.Blocks;
    using Gameplay.Systems.TextLinks;
    using Eco.Core.Controller;
    using Eco.Gameplay.Settlements.ClaimStakes;
    using Eco.Gameplay.Items.Recipes;

    [Serialized]
    [LocDisplayName("Bag of Candy Corn")]
    [Weight(200)]
    [Ecopedia("Food", "Sweets", createAsSubPage: true)]
    [LocDescription("A sweet, festive treat that is perfect for Halloween.")]
    public partial class CandyCornItem : FoodItem
    {
        public override float Calories => 600; 
        public override Nutrients Nutrition => new Nutrients()
        {
            Carbs = 15, 
            Fat = 2,
            Protein = 0,
            Vitamins = 0
        };

        protected override float BaseShelfLife => (float)TimeUtil.HoursToSeconds(96);  
    }

    [RequiresSkill(typeof(CuttingEdgeCookingSkill), 1)]
    public partial class CandyCornRecipe : RecipeFamily
    {
        public CandyCornRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "CandyCorn", //noloc
                displayName: Localizer.DoStr("Bag of Candy Corn"), 
                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(SugarItem), 20, typeof(CuttingEdgeCookingSkill), typeof(CuttingEdgeCookingLavishResourcesTalent)),
                    new IngredientElement(typeof(HighFructoseCornSyrupItem), 10, typeof(CuttingEdgeCookingSkill), typeof(CuttingEdgeCookingLavishResourcesTalent)), 
                    new IngredientElement(typeof(GelatinPowderItem), 1, typeof(CuttingEdgeCookingSkill), typeof(CuttingEdgeCookingLavishResourcesTalent)),
                    new IngredientElement(typeof(FoodColoringItem), 1, typeof(CuttingEdgeCookingSkill), typeof(CuttingEdgeCookingLavishResourcesTalent)),
                    new IngredientElement(typeof(SaltItem), 1, typeof(CuttingEdgeCookingSkill), typeof(CuttingEdgeCookingLavishResourcesTalent)),
                    new IngredientElement(typeof(HoneyItem), 2, typeof(CuttingEdgeCookingSkill), typeof(CuttingEdgeCookingLavishResourcesTalent)),
                    new IngredientElement("Oil", 2, typeof(CuttingEdgeCookingSkill), typeof(CuttingEdgeCookingLavishResourcesTalent)),
                },

                items: new List<CraftingElement>

                {
                new CraftingElement<CandyCornItem>(5), 
                });

            this.Recipes = new List<Recipe> { recipe };
            this.ExperienceOnCraft = 1;

            this.LaborInCalories = CreateLaborInCaloriesValue(400, typeof(CuttingEdgeCookingSkill));

            this.CraftMinutes = CreateCraftTimeValue( 
                beneficiary: typeof(CandyCornRecipe),
                start: 4f,
                skillType: typeof(CuttingEdgeCookingSkill), typeof(CuttingEdgeCookingFocusedSpeedTalent), typeof(CuttingEdgeCookingParallelSpeedTalent));

            this.ModsPreInitialize();
            this.Initialize(displayText: Localizer.DoStr("Bag of Candy Corn"), recipeType: typeof(CandyCornRecipe)); 
            this.ModsPostInitialize();

            CraftingComponent.AddRecipe(tableType: typeof(StoveObject), recipe: this);
        }

        partial void ModsPreInitialize();
        partial void ModsPostInitialize();
    }
}