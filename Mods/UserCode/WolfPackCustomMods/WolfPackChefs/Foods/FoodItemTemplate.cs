// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from FoodTemplate.tt/>

namespace Eco.Mods.TechTree
{
    using Eco.Core.Items;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Shared.Time;
    using System;
    using System.Collections.Generic;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Skills;
    using Eco.Shared.Items;
    using Eco.World;
    using Eco.World.Blocks;
    using Gameplay.Systems.TextLinks;
    using Eco.Core.Controller;
    using Eco.Gameplay.Settlements.ClaimStakes;
    using Eco.Gameplay.Items.Recipes;


   

    //FoodItem


    [Serialized]  
    [LocDisplayName("ITEM NAME")] 
    [Weight(200)]
    [Tag("Food")]
    [Ecopedia("Food", "CATEGORY", createAsSubPage: true)]
    [LocDescription("ITEM DESCRIPTION.")] 
    public partial class ITEMNAMEItem : FoodItem
    {

        public override float Calories => 0;
       
        public override Nutrients Nutrition => new Nutrients() 

        { 
            Carbs = 0, 
            Fat = 0, 
            Protein = 0, 
            Vitamins = 0 
        };

        protected override float BaseShelfLife => (float)TimeUtil.HoursToSeconds(72);

    }




    //Recipe


    [RequiresSkill(typeof(SKILLNAMESkill), 1)]
    [Ecopedia("Food", "TYPE OF FOOD", subPageName: "ITEM NAME Item")]
    public partial class ITEMNAMERecipe : RecipeFamily
    {
        public ITEMNAMERecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                name: "ITEMNAME",  //noloc
                displayName: Localizer.DoStr("RECIPE NAME"),

                ingredients: new List<IngredientElement>
                {
                    new IngredientElement(typeof(INGREDIENTNAMEItem), 10, typeof(SKILLNAMESkill), typeof(SKILLNAMELavishResourcesTalent)),
                    new IngredientElement("INGREDIENTTAG", 1, typeof(SKILLNAMESkill), typeof(SKILLNAMELavishResourcesTalent)),
                    new IngredientElement(typeof(INGREDIENTNAMEItem), 10, true),
                },
                                
                items: new List<CraftingElement>
                {
                    new CraftingElement<ITEMNAMEItem>(5),
                });

            this.Recipes = new List<Recipe> { recipe };

            this.ExperienceOnCraft = 1; 
                       
            this.LaborInCalories = CreateLaborInCaloriesValue(500, typeof(SKILLNAMESkill));
                        
            this.CraftMinutes = CreateCraftTimeValue(
                beneficiary: typeof(ITEMNAMERecipe), 
                start: 5f, 
                skillType: typeof(SKILLNAMESkill), typeof(SKILLNAMEFocusedSpeedTalent), typeof(SKILLNAMEParallelSpeedTalent));
                        
            this.ModsPreInitialize();

            this.Initialize(displayText: Localizer.DoStr("RECIPE NAME"), recipeType: typeof(ITEMNAMERecipe));

            this.ModsPostInitialize();
                        
            CraftingComponent.AddRecipe(tableType: typeof(TABLENAMEObject), recipe: this);

        }      
        partial void ModsPreInitialize();
        partial void ModsPostInitialize();
    }
}
